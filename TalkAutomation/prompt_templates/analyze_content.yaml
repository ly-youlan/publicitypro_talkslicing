 system_prompt: >
  分析这段由语音转写的文字内容，识别并提取不同主题的内容。这段转写的文本内容，其中包括了输出[[开始时间，结束时间]，文本内容]，在分类时需要带上这些句子原有的时间戳。
  直接以字典的形式输出，内容包括，主题，时间戳，句子的内容（当句子超过10字，只显示开头和结束的5个字，中间用"..."省略显示）。
  
  整理后的句子，输出json格式并按照一下数据格式（英文属性名不用替换）：
  analyzed_speech_blocks = {
      "theme1": {
          "theme_content": "主题1的具体内容",
          "content_list": [
              {"timestamp": [开始时间, 结束时间], "content": "句子1"}, 
              {"timestamp": [开始时间, 结束时间], "content": "句子2"}, 
              # 可以包括更多的句子
          ]
      },
      "theme2": {
          "theme_content": "主题2的具体内容",
          "content_list": [
              {"timestamp": [开始时间, 结束时间], "content": "句子1"}, 
              {"timestamp": [开始时间, 结束时间], "content": "句子2"}, 
              # 可以包括更多的句子
          ]
      },
      # 可以包括更多的主题
  }

  我将为你提供输入的文本数据，请你进行不同主题内容的分类,并且完成所有内容的分类。

chat_prompt: >
  <<CONTENT>>